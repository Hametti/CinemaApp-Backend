// <auto-generated />
using CinemaApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CinemaApp.Data.Migrations
{
    [DbContext(typeof(CinemaAppDbContext))]
    partial class CinemaAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CinemaApp.Data.Entities.Movie.DailyView", b =>
                {
                    b.Property<int>("DailyViewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DailyViewId");

                    b.ToTable("DailyViews");
                });

            modelBuilder.Entity("CinemaApp.Data.Entities.Movie.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DailyViewId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MovieId");

                    b.HasIndex("DailyViewId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("CinemaApp.Data.Entities.Movie.ShowingHour", b =>
                {
                    b.Property<int>("ShowingHourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Hour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("ShowingHourId");

                    b.HasIndex("MovieId");

                    b.ToTable("ShowingHour");
                });

            modelBuilder.Entity("CinemaApp.Data.Entities.Movie.Movie", b =>
                {
                    b.HasOne("CinemaApp.Data.Entities.Movie.DailyView", null)
                        .WithMany("movieList")
                        .HasForeignKey("DailyViewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CinemaApp.Data.Entities.Movie.ShowingHour", b =>
                {
                    b.HasOne("CinemaApp.Data.Entities.Movie.Movie", null)
                        .WithMany("ShowingHours")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CinemaApp.Data.Entities.Movie.DailyView", b =>
                {
                    b.Navigation("movieList");
                });

            modelBuilder.Entity("CinemaApp.Data.Entities.Movie.Movie", b =>
                {
                    b.Navigation("ShowingHours");
                });
#pragma warning restore 612, 618
        }
    }
}
